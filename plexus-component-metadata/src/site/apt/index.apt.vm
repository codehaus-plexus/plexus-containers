 ------
 Introduction
 ------
 Herv√© Boutemy
 ------
 2018-07-21
 ------

~~ Licensed to the Apache Software Foundation (ASF) under one
~~ or more contributor license agreements.  See the NOTICE file
~~ distributed with this work for additional information
~~ regarding copyright ownership.  The ASF licenses this file
~~ to you under the Apache License, Version 2.0 (the
~~ "License"); you may not use this file except in compliance
~~ with the License.  You may obtain a copy of the License at
~~
~~   http://www.apache.org/licenses/LICENSE-2.0
~~
~~ Unless required by applicable law or agreed to in writing,
~~ software distributed under the License is distributed on an
~~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~~ KIND, either express or implied.  See the License for the
~~ specific language governing permissions and limitations
~~ under the License.

~~ NOTE: For help with the syntax of this file, see:
~~ http://maven.apache.org/doxia/references/apt-format.html

${project.name}

  The Plexus Component Metadata Maven Plugin is used to generate
  {{{../plexus-container-default/plexus-components.html}Plexus Components descriptors}}
  from source javadoc tags and Java 5 class annotations.

* Goals Overview

  The Plexus Component Metadata Maven Plugin has 3 goals:

  * {{{./generate-metadata-mojo.html}plexus-component-metadata:generate-metadata}} generates
  a Plexus components.xml component descriptor file from source (javadoc) or class annotations
  and manually crafted descriptor files,

  * {{{./generate-test-metadata-mojo.html}plexus-component-metadata:generate-test-metadata}} generates
  a Plexus components.xml component descriptor file from test source (javadoc) or class annotations
  and manually crafted descriptor files,

  * {{{./merge-metadata-mojo.html}plexus-component-metadata:merge-metadata}} merges
  a set of Plexus descriptors into one descriptor file.

* Usage

~~  General instructions on how to use the Plexus Component Metadata Maven Plugin can be found on the
~~  {{{./usage.html}usage page}}. Some more specific use cases are described in the examples given below.

  In case you still have questions regarding the plugin's usage, feel
  free to contact the {{{./mail-lists.html}user mailing list}}. The posts to the mailing list are archived and could
  already contain the answer to your question as part of an older thread. Hence, it is also worth browsing/searching
  the {{{./mail-lists.html}mail archive}}.

  If you feel like the plugin is missing a feature or has a defect, you can fill a feature request or bug report in our
  {{{./issue-tracking.html}issue tracker}}. When creating a new issue, please provide a comprehensive description of your
  concern. Especially for fixing bugs it is crucial that the developers can reproduce your problem. For this reason,
  entire debug logs, POMs or most preferably little demo projects attached to the issue are very much appreciated.
  Of course, patches are welcome, too. Contributors can check out the project from our
  {{{./source-repository.html}source repository}} and will find supplementary information in the
  {{{http://maven.apache.org/guides/development/guide-helping.html}guide to helping with Maven}}.

* Deprecated

  When using {{{https://www.eclipse.org/sisu/}Eclipse Sisu}} with {{{https://github.com/eclipse/sisu.plexus/wiki/Plexus-to-JSR330}JSR-330 <<<javax.inject>>> annotations}},
  use {{{https://github.com/eclipse/sisu.mojos/} <<<sisu-maven-plugin>>>}} instead of Plexus Component Metadata Maven Plugin.
